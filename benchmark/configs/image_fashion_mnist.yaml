# Example of a data processing pipeline
data:
  dataset: fashion_mnist
  load_opts:   # passed to fetch_* function which loads data, not used for this ex.
    args: ~   # specify as a tuple or list of arguments
    kwargs: ~
  preprocess: true
  preprocess_opts: #
    custom: true
    module: benchmark.utils.data
    preprocessor:
      type: obj  # can be obj/fcn. If obj, args/kwargs go to obj constructor
      name: FashionMnistProcessor
      args: ~ # specify as a tuple or arguments list
      kwargs:
        add_singleton_channel: true #  adds 3rd channel dimension
        normalise: true
        normaliser: max # / img tensor by max value
  split: true
  split_opts:
    # train_test_val: uses sklearn.model.selection.train_test_split
    # shuffle: shuffles all data and puts first n_train_records in X_train
    # auto: assumes that fetch_* function returns a Bunch object where the data
    # field is a tf.keras.datasets.dataset object that has a load_data() method
    # which returns a train/test split
    method: auto
    seed: ~

# Example of configuring a random forest classifier
classifier:
  name: fashion_mnist_cnn # custom model, defined in benchmark.utils.models
  loader_fcn: ~ # not used. In the future, it will load the parameters of a trained model
  batch_size: 64
  epochs: 3

# Example of configuring a AnchorTabular explainer
explainer:
  type: image
  segmentation_fn: rectangular_superpixel
  shape_idx: 0  # X_train[idx] determines the image_size passed to the explainer
  threshold: 0.95
  p_sample: 0.8
  parallel: false
  verbose: false
  seed: 0

# Experiment settings
experiment:
  test_only: false # disables saving output (avoid overwriting data when testing stuff)
  n_runs: 1
  instance_split: test # can be train/test
  instance_idx: 0
  transform_instance: true # a one-off transformation to image data. Transformation is specified in preprocess_opts
  ckpt_dir: /home/alex/git/work_experiments/BenchmarkTest
  ckpt: BenchmarkTestHashPassingExample2.pkl
  verbose: true
  show_covered: false
  save:
    # elapsed time included by default
    fields: [anchor, segments, precision, prediction, coverage]
    # By default, it is assumed that the experiment object has
    # amongst its keys the values specified in fields. If this is
    # not the case, then mapping[fields[idx]] contains a list with
    # the keys that should be accessed in the experiment object to
    # retrieve the data. In this example, the output dictionary will be:
    # {'anchor': [[explanation['anchor'], ...],
    #  'prediction':[[explanation['raw']['prediction'], ....]}
    # The lengths of the the keys are = n_runs
    mapping:
      prediction: [raw, prediction]
  profile: false
  profile_dir: /home/alex/git/work_experiments/ProfileData/dummy
  profile_out: anchor_image_fashion_mnist.cprof
