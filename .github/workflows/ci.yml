name: CI

defaults:
  run:
    shell: bash  # To override PowerShell on Windows

on:
  # Trigger the workflow on push or pull request,
  # push only for the master branch,
  # pull request for master and feature branches.
  push:
    branches:
      - master
      - 'feature/*'
  pull_request:
    # don't trigger for draft PRs
    types: [opened, synchronize, reopened, ready_for_review]
  # Trigger workflow once per day at midnight
  schedule:
    - cron: '0 0 * * *'
  # Trigger the workflow on manual dispatch
  workflow_dispatch:

jobs:
  build:
    if: github.event.pull_request.draft == false

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: [ '3.7', '3.8', '3.9', '3.10' ]
        include: # Run macos and windows tests on only one python version
          - os: windows-latest 
            python-version:  '3.9'  # PyTorch doesn't yet have 3.10 support on Windows (https://pytorch.org/get-started/locally/#windows-python) 
          - os: macos-latest 
            python-version:  '3.10'

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip setuptools wheel
          python -m pip install --upgrade --upgrade-strategy eager -r requirements/dev.txt
          python -m pip install --upgrade --upgrade-strategy eager -e .
          if [ "$RUNNER_OS" != "Windows" ] && [ ${{ matrix.python }} < '3.10' ]; then  
          # Windows support for ray is experimental (https://docs.ray.io/en/latest/installation.html#windows-support)
          # Python 3.10 is not yet supported (https://github.com/ray-project/ray/blob/master/python/setup.py#L24) 
            python -m pip install --upgrade --upgrade-strategy eager -e .[ray]
          fi
          python -m pip install --upgrade --upgrade-strategy eager -e .[shap]
          python -m spacy download en_core_web_md
          python -m pip freeze

      - name: Lint with flake8
        run: |
          flake8 alibi

      - name: Typecheck with mypy
        run: |
          mypy alibi

      - name: Test with pytest
        run: |
          pytest -m tf1 alibi
          pytest -m "not tf1" alibi

      - name: Upload coverage to Codecov
        if: ${{ success() }}
        run: |
          codecov

      - name: Build Python package
        run: |
          make build_pypi


  docs:

    runs-on: ubuntu-18.04

    container:
      image: readthedocs/build:latest
      options: --user root

    steps:
      - uses: actions/checkout@v2
      - name: Create a virtualenv to use for docs build
        run: |
          python3.8 -m virtualenv $HOME/docs
      - name: Install dependencies
        run: |
          . $HOME/docs/bin/activate
          python -m pip install -r requirements/docs.txt
          python -m pip freeze
      - name: Build documentation to html
        run: |
          . $HOME/docs/bin/activate
          make build_docs
      - name: Build documentation to pdf via latex
        run: |
          . $HOME/docs/bin/activate
          make build_latex

  licenses:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.x
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'
      - name: Check 3rd party licenses haven't changed
        run: |
          pip install "tox>=3.21.0,<4.0.0"
          make licenses
          make check_licenses

  optional_dependencies:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.x
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'
      - name: Check optional dependency imports are protected
        run: |
          pip install "tox>=3.21.0,<4.0.0"
          tox
